// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Activity {
  id           Int          @id @default(autoincrement())
  title        String
  description  String       @db.Text
  imgUrl       String       @map("img_url")
  startDate    DateTime     @map("start_date")
  endDate      DateTime     @map("end_date")
  amount       Int?
  isUnLimit    Boolean      @default(false) @map("is_unlimit")
  quantity     Int          @default(0)
  mapName      String?
  latitude     Float
  longitude    Float
  IsActive     Boolean      @default(true) @map("is_active")
  createdAt    DateTime     @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime     @updatedAt @map("updated_at") @db.Timestamp(0)
  otherType    String?      @map("other_type")
  activityType ActivityType @relation(fields: [typeId], references: [id], onDelete: Cascade)
  typeId       Int          @map("type_id")
  User         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int          @map("user_id")
  join         Join[]
  bookmark     Bookmark[]

  @@map("activity")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String     @unique
  password   String
  firstName  String     @map("first_name")
  lastName   String     @map("last_name")
  createdAt  DateTime   @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt  DateTime   @updatedAt @map("updated_at") @db.Timestamp(0)
  activities Activity[]
  join       Join[]
  bookmark   Bookmark[]

  @@map("user")
}

model ActivityType {
  id         Int        @id @default(autoincrement())
  nameTH     String     @map("name_th")
  nameEng    String     @map("name_eng")
  activities Activity[]

  @@map("activity_type")
}

model Join {
  id         Int      @id @default(autoincrement())
  Activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
  activityId Int      @map("activity_id")
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int      @map("user_id")

  @@map("join")
}

model Bookmark {
  id         Int      @id @default(autoincrement())
  Activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
  activityId Int      @map("activity_id")
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int      @map("user_id")

  @@map("bookmark")
}
